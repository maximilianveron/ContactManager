{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","ListItem","key","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Header","branding","href","NotFound","App","exact","path","component","About","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2SAEMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,iBACD,OAAO,eACAF,EADP,CAEIG,SAAUH,EAAMG,SAASC,QAAO,SAAAC,GAAO,OACnCA,EAAQC,KAAOL,EAAOM,aAElC,IAAK,cACD,OAAO,eACAP,EADP,CAEGG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAG3C,IAAK,iBACD,OAAO,eACAH,EADP,CAEIG,SAAUH,EAAMG,SAASK,KAAI,SAAAH,GAAO,OAChCA,EAAQC,KAAOL,EAAOM,QAAQD,GAAMD,EAAUJ,EAAOM,QAAWF,OAE5E,QACI,OAAOL,IAINS,EAAb,4MACIT,MAAQ,CACJG,SAAU,GACdO,SAAU,SAAAT,GAAM,OAAI,EAAKU,UAAS,SAAAX,GAAK,OAAID,EAAQC,EAAOC,QAH9D,kMAO0BW,IAAMC,IAAI,8CAPpC,OAOcC,EAPd,OASQC,KAAKJ,SAAS,CAACR,SAAUW,EAAIE,OATrC,qIAYQ,OACI,kBAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,OACrBe,KAAKG,MAAMC,cAdhC,GAA8BC,aAoBjBC,EAAWzB,EAAQyB,SCmBjBC,E,4MA7DXtB,MAAQ,CACJuB,iBAAgB,G,EAGpBC,c,uCAAgB,WAAMlB,EAAII,GAAV,SAAAe,EAAA,+EAEFb,IAAMc,OAAN,qDAA2DpB,IAFzD,OAGRI,EAAS,CAACR,KAAM,iBAAkBK,QAASD,IAHnC,+CAKRI,EAAS,CAACR,KAAM,iBAAkBK,QAASD,IALnC,wD,+GAWN,IAAD,SACyBS,KAAKG,MAAMb,QAAlCC,EADF,EACEA,GAAGqB,EADL,EACKA,KAAKC,EADV,EACUA,MAAMC,EADhB,EACgBA,MACdN,EAAmBR,KAAKf,MAAxBuB,gBACP,OACI,kBAACF,EAAD,MACK,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACP,OACG,yBAAKoB,UAAU,uBACf,4BAAKH,EAAL,IAAW,uBAAGI,QAAS,kBAAM,EAAKpB,SAAS,CAAEY,iBAAkB,EAAKvB,MAAMuB,mBAAoBO,UAAU,mBAAmBE,MAAO,CAAEC,OAAO,aAAgB,uBAAGH,UAAU,eAAeE,MAAO,CAAEC,OAAO,UAAWC,MAAM,QAASC,MAAM,OAAQJ,QAAS,EAAKP,cAAcY,KAAK,EAAM9B,EAAII,KAC1R,kBAAC,IAAD,CAAM2B,GAAE,uBAAkB/B,IACtB,uBAAGwB,UAAU,oBACTE,MAAO,CACHC,OAAO,UACPC,MAAM,QACNC,MAAM,QACNG,YAAa,YAKzBf,EACG,wBAAIO,UAAU,cACT,wBAAIA,UAAU,mBAAd,WAAyCF,GACzC,wBAAIE,UAAU,mBAAd,WAAyCD,EAAzC,MAGL,a,GA3CJT,aCmCRmB,E,uKA3BP,OACI,kBAAClB,EAAD,MACK,SAAAJ,GAAU,IAEAuB,EADevB,EAAbd,SACkBK,KAAI,SAACH,GAAD,OAC9B,kBAAC,EAAD,CACIoC,IAAKpC,EAAQC,GACbD,QAASA,OAId,OACI,kBAAC,IAAMqC,SAAP,KACI,wBAAIZ,UAAU,kBAAiB,0BAAMA,UAAU,eAAhB,YAA/B,SACEU,U,GAtBNpB,a,iCCFlBuB,EAAiB,SAAC,GAQjB,IAPHC,EAOE,EAPFA,MACAjB,EAME,EANFA,KACAV,EAKE,EALFA,MACA4B,EAIE,EAJFA,YACA3C,EAGE,EAHFA,KACA4C,EAEE,EAFFA,SACAC,EACE,EADFA,MAEA,OACI,yBAAKjB,UAAU,cACX,2BAAOkB,QAASrB,GAAOiB,GACvB,2BAAO1C,KAAMA,EAAMyB,KAAMA,EAAMG,UAAWmB,IAAW,+BAAgC,CACjF,aAAcF,IACdF,YAAaA,EAAa5B,MAAOA,EAAO6B,SAAUA,IACpDC,GAAS,yBAAKjB,UAAU,oBAAoBiB,KAoB1DJ,EAAeO,aAAe,CAC1BhD,KAAM,QAEKyC,QCkEAQ,E,4MApGfnD,MAAQ,CACJ2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPuB,OAAQ,I,EAERC,S,uCAAW,WAAM3C,EAAU4C,GAAhB,yBAAA7B,EAAA,yDACP6B,EAAEC,iBADK,EAGgC,EAAKvD,MAApC2B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,MAHd,EAGqBuB,OAGhB,KAATzB,EANI,uBAOH,EAAKhB,SAAS,CAACyC,OAAQ,CAAEzB,KAAM,sBAP5B,6BAUM,KAAVC,EAVI,uBAWH,EAAKjB,SAAS,CAACyC,OAAQ,CAAExB,MAAO,uBAX7B,6BAcM,KAAVC,EAdI,wBAeH,EAAKlB,SAAS,CAACyC,OAAQ,CAAEvB,MAAO,uBAf7B,kCAkBD2B,EAAa,CACf7B,OACAC,QACAC,SArBG,UAuBWjB,IAAM6C,KAAK,6CAA8CD,GAvBpE,QAuBD1C,EAvBC,OAyBPJ,EAAS,CAACR,KAAM,cAAeK,QAASO,EAAIE,OAE5C,EAAKL,SAAU,CACXgB,KAAK,GACLC,MAAM,GACNC,MAAM,GACNuB,OAAQ,KAIZ,EAAKlC,MAAMwC,QAAQC,KAAK,KAnCjB,4C,0DAuCXb,SAAW,SAAAQ,GAAC,OAAI,EAAK3C,SAAL,eAAgB2C,EAAEM,OAAOjC,KAAO2B,EAAEM,OAAO3C,S,uDAE/C,IAAD,SACkCF,KAAKf,MAApC2B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOuB,EADvB,EACuBA,OAE5B,OACI,kBAAC/B,EAAD,MACK,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACI,yBAAKoB,UAAU,aACf,yBAAKA,UAAU,eAAf,eAGA,yBAAKA,UAAU,aACX,0BAAMuB,SAAU,EAAKA,SAASjB,KAAK,EAAM1B,IACrC,kBAAC,EAAD,CACIkC,MAAM,OACNjB,KAAK,OACLkB,YAAY,sBACZ5B,MAAOU,EACPmB,SAAU,EAAKA,SACfC,MAAOK,EAAOzB,OAEjB,kBAAC,EAAD,CACGiB,MAAM,QACNjB,KAAK,QACLzB,KAAK,QACL2C,YAAY,mBACZ5B,MAAOW,EACPkB,SAAU,EAAKA,SACfC,MAAOK,EAAOxB,QAEjB,kBAAC,EAAD,CACGgB,MAAM,QACNjB,KAAK,QACLkB,YAAY,mBACZ5B,MAAOY,EACPiB,SAAU,EAAKA,SACfC,MAAOK,EAAOvB,QAGlB,2BAAO3B,KAAK,SAASe,MAAM,cAAca,UAAU,sC,GAxF1DV,aCoHVyC,E,4MAnHf7D,MAAQ,CACJ2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPuB,OAAQ,I,EAcRC,S,uCAAW,WAAM3C,EAAU4C,GAAhB,2BAAA7B,EAAA,yDACP6B,EAAEC,iBADK,EAGgC,EAAKvD,MAApC2B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,MAHd,EAGqBuB,OAGhB,KAATzB,EANI,uBAOH,EAAKhB,SAAS,CAACyC,OAAQ,CAAEzB,KAAM,sBAP5B,6BAUM,KAAVC,EAVI,uBAWH,EAAKjB,SAAS,CAACyC,OAAQ,CAAExB,MAAO,uBAX7B,6BAcM,KAAVC,EAdI,wBAeH,EAAKlB,SAAS,CAACyC,OAAQ,CAAEvB,MAAO,uBAf7B,kCAmBDiC,EAAa,CACfnC,OACAC,QACAC,SAGIvB,EAAO,EAAKY,MAAM6C,MAAMC,OAAxB1D,GAzBD,UA2BWM,IAAMqD,IAAN,qDAAwD3D,GAAMwD,GA3BzE,QA2BDhD,EA3BC,OA6BPJ,EAAS,CAACR,KAAM,iBAAkBK,QAAQO,EAAIE,OAC9C,EAAKL,SAAU,CACXgB,KAAK,GACLC,MAAM,GACNC,MAAM,GACNuB,OAAQ,KAIZ,EAAKlC,MAAMwC,QAAQC,KAAK,KAtCjB,4C,0DA0CXb,SAAW,SAAAQ,GAAC,OAAI,EAAK3C,SAAL,eAAgB2C,EAAEM,OAAOjC,KAAO2B,EAAEM,OAAO3C,S,6LArD7CX,EAAOS,KAAKG,MAAM6C,MAAMC,OAAxB1D,G,SACUM,IAAMC,IAAN,qDAAwDP,I,OAApEQ,E,OAEAT,EAAUS,EAAIE,KAEpBD,KAAKJ,SAAS,CACVgB,KAAMtB,EAAQsB,KACdC,MAAOvB,EAAQuB,MACfC,MAAOxB,EAAQwB,Q,qIA+Cb,IAAD,SACkCd,KAAKf,MAApC2B,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,MAAOuB,EADvB,EACuBA,OAE5B,OACI,kBAAC/B,EAAD,MACK,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACI,yBAAKoB,UAAU,aACf,yBAAKA,UAAU,eAAf,gBAGA,yBAAKA,UAAU,aACX,0BAAMuB,SAAU,EAAKA,SAASjB,KAAK,EAAM1B,IACrC,kBAAC,EAAD,CACIkC,MAAM,OACNjB,KAAK,OACLkB,YAAY,sBACZ5B,MAAOU,EACPmB,SAAU,EAAKA,SACfC,MAAOK,EAAOzB,OAEjB,kBAAC,EAAD,CACGiB,MAAM,QACNjB,KAAK,QACLzB,KAAK,QACL2C,YAAY,mBACZ5B,MAAOW,EACPkB,SAAU,EAAKA,SACfC,MAAOK,EAAOxB,QAEjB,kBAAC,EAAD,CACGgB,MAAM,QACNjB,KAAK,QACLkB,YAAY,mBACZ5B,MAAOY,EACPiB,SAAU,EAAKA,SACfC,MAAOK,EAAOvB,QAGlB,2BAAO3B,KAAK,SAASe,MAAM,iBAAiBa,UAAU,sC,GAvG5DV,aCF1B,SAAS8C,EAAQhD,GAAQ,IACdiD,EAAYjD,EAAZiD,SACN,OACG,yBAAKrC,UAAU,0DACX,yBAAKA,UAAU,aACX,uBAAGsC,KAAK,IAAItC,UAAU,gBACjBqC,GAEL,6BACI,wBAAIrC,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,YAAW,uBAAGA,UAAU,gBAA/C,UAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,eAAeP,UAAU,YAAW,uBAAGA,UAAU,gBAA1D,SAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,YAAW,uBAAGA,UAAU,oBAApD,eAS5BoC,EAAOhB,aAAe,CAClBiB,SAAS,UAOb,IAOeD,IC5CA,aACX,OACI,6BACI,wBAAIpC,UAAU,aAAd,mBACA,uBAAGA,UAAU,QAAb,gCACA,uBAAGA,UAAU,kBAAb,mB,MCLG,SAASuC,IACpB,OACI,6BACI,wBAAIvC,UAAU,aAAd,sBACA,uBAAGA,UAAU,QAAb,oCCoCGwC,MA1Bf,WAEE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACA,yBAAKxC,UAAU,OAEb,kBAAC,EAAD,CAAQqC,SAAS,oBACnB,yBAAKrC,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,IAAIC,UAAYlC,IAClC,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,oBAAoBC,UAAYZ,IAClD,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,eAAeC,UAAYtB,IAC7C,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,SAASC,UAAYC,IACvC,kBAAC,IAAD,CAAOD,UAAWJ,UClB1BM,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DAsCN,SAASiB,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzF,QACfmF,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAlD,GACL8C,QAAQ9C,MAAM,4CAA6CA,MC3FjEmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDanB,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,kBAAwB3B,OAAOC,SAASV,MACpDqC,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMuB,kBAAN,sBAEP7B,IAgEV,SAAiCM,EAAOC,GAEtCyB,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BtB,MAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASD,QAAQ/F,IAAI,gBAEnB,MAApBgG,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM3B,MAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,MAAK,WAC7BT,OAAOC,SAASqC,eAKpBnC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAsB,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM3B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCnC/BE,K","file":"static/js/main.f3f465b5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios'\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n               contacts: [action.payload, ...state.contacts]\r\n            }\r\n\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => \r\n                    contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n    \r\n    }\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        \r\n        this.setState({contacts: res.data})\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                    {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types';\r\n\r\n class Contact extends Component {\r\n    state = {\r\n        showContactInfo:false\r\n    }; \r\n\r\n    onDeleteClick = async(id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)      \r\n            dispatch({type: 'DELETE_CONTACT', payload: id})\r\n        } catch (e) {\r\n            dispatch({type: 'DELETE_CONTACT', payload: id})\r\n        }\r\n       \r\n    }\r\n  \r\n    \r\n    render() {\r\n        const {id,name,email,phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                     return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>{name} <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} className=\"fas fa-sort-down\" style={{ cursor:'pointer'}}></i><i className=\"fas fa-times\" style={{ cursor:'pointer', float:'right', color:'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\r\n                        <Link to={`contact/edit/${id}`}>\r\n                            <i className=\"fas fa-pencil-alt\"\r\n                                style={{\r\n                                    cursor:'pointer',\r\n                                    float:'right',\r\n                                    color:'black',\r\n                                    marginRight: '1rem'\r\n                                }}\r\n                            />\r\n                        </Link>\r\n                        </h4>\r\n                       {showContactInfo ? (\r\n                           <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email : {email}</li>\r\n                                <li className=\"list-group-item\">Phone : {phone} </li>\r\n                            </ul>\r\n        \r\n                       ) : null}\r\n        \r\n                        \r\n                    </div>\r\n                     )\r\n                }}\r\n            </Consumer>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n   contact: PropTypes.object.isRequired,\r\n  \r\n   \r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context'\r\n\r\n\r\n\r\n class Contacts extends Component {\r\n    \r\n       \r\n\r\n   \r\n    render() {\r\n       \r\n        \r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                     const { contacts } = value;\r\n                     const ListItem = contacts.map((contact) => \r\n                     <Contact \r\n                         key={contact.id}\r\n                         contact={contact}\r\n                         \r\n                        />\r\n        );\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\" >Contact </span> List</h1>\r\n                             {ListItem}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )   \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} name={name} className={classnames('form-control form-control-lg', {\r\n                'is-invalid': error\r\n            })} placeholder={placeholder} value={value} onChange={onChange}></input>\r\n            { error && <div className=\"invalid-feedback\">{error}</div> }\r\n            \r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n    \r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\n\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\nimport { v4 as uuid4 } from 'uuid';\r\n\r\nclass AddContact extends Component {\r\nstate = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n}\r\n    onSubmit = async(dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        //Check For Error\r\n        if(name === '') {\r\n            this.setState({errors: { name: 'Name Is Required'}})\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({errors: { email: 'Email Is Required'}})\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({errors: { phone: 'Phone Is Required'}})\r\n            return;\r\n        }\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        \r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n        \r\n        this.setState ({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors: {}\r\n\r\n        })\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n   \r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">\r\n                            Add Contact\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                <TextInputGroup \r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Your Name ...\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n                                 <TextInputGroup \r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Your Email\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n                                 <TextInputGroup \r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Enter Your Phone\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />\r\n                               \r\n                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n     \r\n    }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\n\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\n\r\nclass EditContact extends Component {\r\nstate = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n}\r\n    async  componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n    onSubmit = async(dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        //Check For Error\r\n        if(name === '') {\r\n            this.setState({errors: { name: 'Name Is Required'}})\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({errors: { email: 'Email Is Required'}})\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({errors: { phone: 'Phone Is Required'}})\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        \r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n        \r\n        dispatch({type: 'UPDATE_CONTACT', payload:res.data})\r\n        this.setState ({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors: {}\r\n\r\n        })\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n   \r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">\r\n                            Edit Contact\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                <TextInputGroup \r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Your Name ...\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n                                 <TextInputGroup \r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Your Email\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n                                 <TextInputGroup \r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Enter Your Phone\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />\r\n                               \r\n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n     \r\n    }\r\n}\r\n\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Header (props) {\r\n    const {branding} = props;\r\n     return(\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n     )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding:'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nconst Headingstyle = {\r\n\r\n    color: 'red',\r\n    fontSize: '40px'\r\n\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">Contact manager</h1>\r\n            <p className=\"lead\">Simple App To manage contact</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">404 Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, That page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact'\nimport Header from './components/layout/Header';\nimport About from './components/pages/About'\nimport { Provider } from './context';\n \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { render } from 'react-dom';\nimport NotFound from './components/pages/NotFound';\n// import { render } from '@testing-library/react';\n\nfunction App() {\n  const name = 'Ronny';\n  return (\n    <Provider>\n      <Router>\n      <div className=\"App\">\n        \n        <Header branding=\"Contact Manager\"/>\n      <div className=\"container\">\n          <Switch>\n              <Route exact path=\"/\" component={ Contacts } />\n              <Route exact path=\"/contact/edit/:id\" component={ EditContact } />\n              <Route exact path=\"/contact/add\" component={ AddContact } />\n              <Route exact path=\"/about\" component={ About } />\n              <Route component={NotFound}/>\n          </Switch>\n      </div>\n      </div>\n      </Router>\n      \n    </Provider>\n    \n  );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}